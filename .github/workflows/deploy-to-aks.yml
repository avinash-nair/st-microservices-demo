name: Deploy to AKS

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]  # This must match exactly with the name in build-and-push.yml
    types:
      - completed
    branches:
      - dev

permissions:
  id-token: write
  contents: read

env:
  AZURE_REGION: 'australiaeast'
  ACR_NAME: 'skilltechregistry'
  RESOURCE_GROUP_NAME: 'microservices-demo-rg'
  AKS_CLUSTER_NAME: 'microservices-demo-aks'
  AKS_NAMESPACE: 'default'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Only run if the previous workflow succeeded
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get built images
        id: get-images
        run: echo "Images built: ${{ needs.build-and-push.outputs.images }}"

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Verify Azure CLI installation
        run: |
          az --version

      - name: Log in to Azure
        uses: azure/login@v1.4.7
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.AKS_CLUSTER_NAME }}

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Deploy to AKS using Helm
        run: |
          # Extract image names from the build-and-push outputs
          images_list="${{ needs.build-and-push.outputs.images }}"
          images_array=(${images_list//;/ })
          
          for service in "${images_array[@]}"; do
            echo "Deploying $service"
            helm upgrade --install $service charts/$service \
              --set image.repository=${{ env.ACR_NAME }}.azurecr.io/$service \
              --set image.tag=latest \
              --namespace ${{ env.AKS_NAMESPACE }}
            echo "Deployed $service"
          done

      - name: Azure CLI logout
        run: |
          az logout
